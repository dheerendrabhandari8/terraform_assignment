name: Provision Infrastructure with Terraform

on:
  push:
    branches: [main]  # Ensure this runs on the default branch
    paths:
      - '**/*.tf'
      - '**/terraform.yml'
      - '**/terraform/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action: apply or destroy'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      server_ip: ${{ steps.output.outputs.SERVER_IP }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'ap-south-1' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve

      - name: Output public IP
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        id: output
        run: |
          echo "SERVER_IP=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      - name: Save public IP to file
        run: echo "${{ steps.output.outputs.SERVER_IP }}" > server_ip.txt

      - name: Upload public IP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-ip
          path: server_ip.txt

  ansible:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ needs.terraform.outputs.server_ip }} >> ~/.ssh/known_hosts

      - name: Run Ansible playbook
        run: |
          ansible-playbook -i "${{ needs.terraform.outputs.server_ip }}," ansible-playbook.yml -u ubuntu --private-key ~/.ssh/id_rsa

