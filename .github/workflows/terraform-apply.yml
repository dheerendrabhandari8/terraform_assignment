on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to perform (apply or destroy)"
        required: false
        default: "apply"

jobs:
  terraform-apply:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'ap-south-1' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Output public IP
        id: output
        run: |
          echo "SERVER_IP=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

    outputs:
      server_ip: ${{ steps.output.outputs.SERVER_IP }}

  install-dependencies:
    needs: terraform-apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ needs.terraform-apply.outputs.server_ip }} >> ~/.ssh/known_hosts

      - name: Run Ansible Install Playbook
        run: |
          ansible-playbook -i "${{ needs.terraform-apply.outputs.server_ip }}," install_dependencies.yml -u ubuntu --private-key ~/.ssh/id_rsa

      # Trigger next workflow
      - name: Trigger docker-build-and-k8s pipeline
        uses: peter-evans/workflow-dispatch@v1
        with:
          token: ${{ secrets.TOKEN }}
          repository: ${{ github.repository }}
          workflow: docker-build-and-k8s.yml
          ref: ${{ github.ref }}
          inputs: |
            server_ip: ${{ needs.terraform-apply.outputs.server_ip }}

  terraform-destroy:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'ap-south-1' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
